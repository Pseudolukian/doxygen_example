name: Doxygen GitHub Pages Deploy Action

on:
  push:
    branches:
      - main

permissions:
    id-token: write
    pages: write
    contents: read
    pull-requests: write      

env:
  DOXYGEN_OUTPUT: docs_output
  DOXYGEN_OUTPUT_RU: docs_output/ru
  DOXYGEN_OUTPUT_EN: docs_output/en
  PLANTUML_JAR: plantuml-1.2025.2.jar
  INPUT_DIR: docs_src
  INPUT_DIR_RU: docs_src/ru  
  INPUT_DIR_EN: docs_src/en
  LOCALE_EN: ENGLISH
  LOCALE_RU: RUSSIAN
  PROJECT_NAME_RU: "Высокопроизводительный логгер"
  PROJECT_NAME_EN: "High-performance logger"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create output directories
        run: |
          mkdir -p ${{ env.DOXYGEN_OUTPUT_RU }}/html
          mkdir -p ${{ env.DOXYGEN_OUTPUT_EN }}/html
      
      - name: Create .nojekyll files
        run: |
          touch ${{ env.DOXYGEN_OUTPUT }}/.nojekyll
          touch ${{ env.DOXYGEN_OUTPUT_RU }}/html/.nojekyll
          touch ${{ env.DOXYGEN_OUTPUT_EN }}/html/.nojekyll

      - name: Install Python
        run: sudo apt-get install -y python3 python3-pip
      
      - name: Install markdown2
        run: pip3 install markdown2

      - name: Convert README.md to HTML
        run: python3 test_task/index_html_builder.py
      
      - name: CP index.html
        run: | 
          cp test_task/index.html ${{ env.DOXYGEN_OUTPUT }}/index.html
          cp test_task/main.css ${{ env.DOXYGEN_OUTPUT }}/main.css
          cp test_task/diagram.svg ${{ env.DOXYGEN_OUTPUT }}/diagram.svg
      
      - name: Install Java
        run: sudo apt-get install -y default-jre  

      - name: Download PlantUML JAR
        run: wget https://github.com/plantuml/plantuml/releases/download/v1.2025.2/${{ env.PLANTUML_JAR }}

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y wget graphviz
  
      - name: Install Doxygen
        run: sudo apt-get install -y doxygen
      
      - name: Generate Doxygen RU documentation
        run: doxygen config_gh
        env:
          OUTPUT_DIR_ENV: ${{ env.DOXYGEN_OUTPUT_RU }}
          PLANTUML_JAR_PATH_ENV: ${{ env.PLANTUML_JAR }}
          INPUT_DIR: ${{ env.INPUT_DIR_RU }}
          LOCALE: ${{ env.LOCALE_RU }}
          PROJECT_NAME: ${{ env.PROJECT_NAME_RU }}
      
      - name: Generate Doxygen EN documentation
        run: doxygen config_gh
        env:
          OUTPUT_DIR_ENV: ${{ env.DOXYGEN_OUTPUT_EN }}
          PLANTUML_JAR_PATH_ENV: ${{ env.PLANTUML_JAR }}
          INPUT_DIR: ${{ env.INPUT_DIR_EN }}
          LOCALE: ${{ env.LOCALE_EN }}
          PROJECT_NAME: ${{ env.PROJECT_NAME_EN }}
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: custom

      - name: Package and upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.DOXYGEN_OUTPUT }}/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4