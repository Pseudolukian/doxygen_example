/**
@mainpage Документация аллокатора памяти, неблокируемой очереди и логгера.
@brief
Система состоит из трех компонентов:
- **Аллокатор памяти**: предоставляет выровненное выделение памяти.
- **Неблокируемая очередь**: позволяет потокам безопасно обмениваться данными без использования блокировок.
- **Логгер**: собирает сообщения от различных потоков через буфер и записывает их в файл в отдельном потоке.

Компоненты взаимодействуют следующим образом:
- Аллокатор памяти используется для выделения памяти для элементов очереди и буфера логов.
- Неблокируемая очередь используется в буфере логов для хранения сообщений, отправляемых потоками.
- Логгер потребляет сообщения из буфера и записывает их в файл.

Для более подробного понимания взаимодействия компонентов, пожалуйста, обратитесь к схеме PlantUML:

@startuml
!include ./scheme.puml!0
@enduml

@section sec_1 Компоненты системы

@subsection sec_1_1 Аллокатор памяти
Аллокатор памяти (`AlignedAllocator`) выделяет память с заданным выравниванием, что помогает избежать проблем с кэш-линиями в многопоточных приложениях. Он управляет пулом памяти, выделенным при создании, и предоставляет методы для выделения и сброса памяти.

@subsection sec_1_2 Неблокируемая очередь
Неблокируемая очередь (`LockFreeQueue`) позволяет потокам добавлять и извлекать элементы без использования блокировок. Это достигается с помощью атомарных операций и тщательного управления индексами головы и хвоста очереди.

@subsection sec_1_3 Логгер
Логгер (`LogWriter`) использует буфер логов (`LogBuffer`), который, в свою очередь, использует неблокируемую очередь для хранения сообщений. Логгер работает в отдельном потоке, извлекая сообщения из буфера и записывая их в файл.

*/